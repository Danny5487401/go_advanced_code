"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseMarkdown = void 0;
const unified_1 = __importDefault(require("unified"));
// @ts-ignore
const from_markdown_1 = __importDefault(require("mdast-util-gfm-autolink-literal/from-markdown"));
// FIXME: Disable auto link literal transforms that break AST node
// https://github.com/remarkjs/remark-gfm/issues/16
// Need to override before import gfm plugin
from_markdown_1.default.transforms = [];
// Load plugins
const remark_gfm_1 = __importDefault(require("remark-gfm"));
const remark_parse_1 = __importDefault(require("remark-parse"));
const remark_frontmatter_1 = __importDefault(require("remark-frontmatter"));
const remark_footnotes_1 = __importDefault(require("remark-footnotes"));
const remark = (0, unified_1.default)().use(remark_parse_1.default).use(remark_frontmatter_1.default, ["yaml"]).use(remark_gfm_1.default).use(remark_footnotes_1.default, {
    inlineNotes: true
});
const parseMarkdown = (text) => {
    return remark.parse(text);
};
exports.parseMarkdown = parseMarkdown;
//# sourceMappingURL=parse-markdown.js.map